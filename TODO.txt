TODO Week
-------
  - Storage
    - Colores segun velocidad
    - Modals para resetear
    - jQuery resetear
  - Repasar codigo de cada archivo
  - Traducciones
  - Generar documentacion

TODO Future:
-------
  - optimizaciones capinfo -t?
  - testSimple para detectar trazas simple validas?
  - actualizar testSimple.c para que añada al final el nº de paquetes
    - en launchRecorder.sh, que se llame despues a testSimple y añada esto
  - Terminar de probar todo con los binarios nuevos
    - Sobre todo captura/reproduccion/conversion
    - Ver como va a 10G
  - Probar delete_raid, storage gui
  - Captures/all va lento por el capinfos -t, como mejorar?
      - Ver si va mejor en dagda

Jose:
-------
  - Nuevos binarios finales de todo cuando este listo testSimple.c (solo queda eso!!! :D)
  
_________________________________________________________________________________________

Cosas a mencionar en la memoria:
  - Esquema de la arquitectura
    - Por qué PHP
      - Composer
    - Bower
    - Por qué io.js
    - Restricciones (red local entre php e io.js)
      - Redes distintas para control/tráfico
  - Esquema de comunicaciones/protocolos entre las 3 partes
  - Diseño de la aplicación, responsive, temas, atractiva visualmente, mejora de manejo respecto a consola
  - Framework MVC+Router+Logger desarrollado en PHP. Traducción de rutas, configuración, componentes:
    - rewrite (htaccess)
    - gettext
    - composer
    - bower
  - Localización
    - Importancia, gettext()
    - PHP+JavaScript, reto
    - Solución .js.php
    - Solución caché ficheros, time()+guardar última modificación
  - REST(-based) stack (express, io.js) service, filosofía
    - Distintas partes. Máquina de estados finito
    - Diferencias y restricciones respecto a restful
    - Llamadas asíncronas
    - Algoritmo utilizado
    - JSONP, cross-domain <-> Proxy
    - Supervisor, cambios en javascript sin reiniciar
    - Timestamps (extra, no necesario, vlan distintas)
  - Documentación
    - Wiki
    - phpDocumentor
    - apiDoc
    - Web Service
  - Posibles mejoras
    - Estandarización, futuras fpgas con características parecidas
    - Más idiomas
    - Más estadísticas
    - Módulo de seguridad

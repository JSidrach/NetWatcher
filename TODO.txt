Workflow javascript captures
  - Seleccionar 1 de tabla: guardar nombre en panel azul, guardar tipo en algún lado
- Checker server config php

TODO Week:
-------
  - Hacer la funcionalidad de la página de capturas (netwatcher-captures.js)
  - Localizar página captures con POEdit

  - Instalación+Mount de la FPGA (hasta justo antes de configurar)
  - Terminar tipos de códigos status
  - Boceto página de manager

  - Más temas bootstrap


Dudas Jose:
-------
IMPORTANTE: Problema reproducir tráfico FPGA
Tipo de códigos en /proc/nfp/nfp_report
Qué hace readRegisters, testControl
- Añadir dependencia red local
- Tema seguridad

-------
TODO: Investigar cómo traducir los mensajes json
  - Opción real: ignorar descripciones de la api, hacer echo de descripciones propias
  - Opción óptima?: crear un script que busque todos los json de la api, y cree un php con todas las cadenas encontradas en los json
  - Opción buena: traducir del lado del cliente PHP
  - Opción MALA?: mandar sólo información no redundante (ids estado, códigos y estadísticas), php se encarga de traducir?

API JSON (root: /fpga_api/) - Servidor node.js+express

GET
/status/
  Mensajes:
Mensaje genérico de error por estado no válido para los GET/POST
  status => "not_valid"
  description => "The FPGA is not ready (in a valid state) to perform this operation yet."

Mensaje de estado inconsistente?

Mensaje de orden procesada
  status => "success"
  description => ""

--
Definir mensajes no estaticos como key fija y value a cadena vacia ("")
--


_________________________________________________________________________________
Esquema aplicación:

NetWatcher (sin enlace)

Manager
  > Estado actual, y cambiar de estado, mediante distintos pasos de formulario

Statistics
  > Estado actual, y cuando esté reproduciendo/capturando algunas estadísticas

Manage Captures
  > Ver capturas actuales (todas, simples, pcap, ordenación, búsqueda)
  > Convertir capturas entre formatos
  > Delete > con confirmación
  > Rename
  Explicación de como subir nuevas en una caja, scp etc

Settings
  > Idioma, servidor, temas
  
  
_________________________________________________________________________________

[Proceso del servidor FPGA]

<status_1_hugepages_off>
1) Saber si HugePages está activo
------
0 si huge pages está activo, 1 sino
cat /proc/meminfo | grep "HugePages_Total:       0"

2) Para cambiar a HugePages
-----
Solución óptima: hacer grub-reboot [número]                               [ ]
Solución no óptima: guardar para que por defecto se ponga el de HugePages [x]
  - Añadir en requisitos previos...?

<status_2_init_off>
3) Para inicializar
----
impact.sh Argumento fichero de configuración (bitstream) > DESDE AQUI PLAYER O RECORDER

4) Para comprobar que esté programada
----
lspci | grep 19aa:e004
Si sale 0 es que está programada

<status_3_mount_off>
5) Instanciar y montar
----
./install_driver.sh
Reboot

6) Para ver si está instanciada y montada
----
lsmod | grep nfp_driver
Si sale 0 es que está montada

7) Para ver si está en reproductor o capturador
----
cat /proc/nfp/nfp_report | grep PLA
Si sale 0, está en player
cat /proc/nfp/nfp_report | grep REC
Si sale 0, está en recorder

<status_4_fpga.json>


(Para detectar aquí, buscar el proceso?)
8) Configurar cuanto va a enviar/recibir
----
./writeControl para controlar cuanto va a enviar/recibir, -l mascara 3

8.1) Configuración adicional recepción
----
./configureAel para eliminar ruido

9.1) Recepción
----
./card2host

9.2) Captura
----
./host2card


_________________________________________________________________________________________

Cosas a mencionar en la memoria:
  - Esquema de la arquitectura
    - Por qué PHP
    - Por qué io.js
    - Restricciones (red local)
  - Esquema de comunicaciones/protocolos entre las 3 partes
  - Diseño de la aplicación, responsive, temas, atractiva visualmente, mejora de manejo respecto a consola
  - Framework MVC+Router+Logger desarrollado en PHP. Traducción de rutas, configuración, componentes:
    - rewrite (htaccess)
    - gettext
    - composer
  - Localización
    - Importancia, gettext()
    - PHP+JavaScript, reto
    - Solución .js.php
    - Solución caché ficheros, time()+guardar última modificación
  - REST(-based) stack (express, io.js) service, filosofía
    - Distintas partes. Máquina de estados finito
    - Diferencias y restricciones respecto a restful
    - Llamadas asíncronas
    - Algoritmo utilizado
    - JSONP, cross-domain
    - Supervisor, cambios en javascript sin reiniciar
  - Documentación
    - Wiki
    - Swagger?
    - phpDocumentor
  - Problema de tráfico redundante, reproducir mismo tráfico que se capturó, incluyendo órdenes al servicio
    - Solución propuesta
  - Posibles mejoras
    - Más idiomas
    - Más estadísticas
    - Módulo de seguridad